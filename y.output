State 127 conflicts: 1 shift/reduce
State 150 conflicts: 1 shift/reduce
State 164 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: CMDs

    2 CMDs: CMD CMDs
    3     | DECL_VAR ';' CMDs
    4     | DECL_FUN CMDs
    5     | /* empty */

    6 CMD: CMD_FOR
    7    | CMD_IF
    8    | CMD_WHILE
    9    | E_V ';'
   10    | '{' CMD CMDs '}'
   11    | '{' '}'
   12    | ';'
   13    | _RETURN ';'
   14    | _RETURN EE ';'

   15 CMD_IF: _IF '(' E ')' CMD _ELSE CMD
   16       | _IF '(' E ')' CMD

   17 CMD_FOR: _FOR '(' E_OPC ';' E_OPC ';' E_OPC ')' CMD
   18        | _FOR '(' DECL_VAR ';' E_OPC ';' E_OPC ')' CMD

   19 CMD_WHILE: _WHILE '(' E ')' CMD

   20 E_OPC: E_V
   21      | /* empty */

   22 DECL_VAR: _LET LVARs
   23         | _VAR VVARs
   24         | _CONST CTEs

   25 DECL_FUN: _FUNCTION _ID '(' ')' '{' NOVO_ESCOPO CMDs '}' DESTROI_ESCOPO
   26         | _FUNCTION _ID '(' NOVO_ESCOPO PARAMs ')' '{' CMDs '}' DESTROI_ESCOPO

   27 NOVO_ESCOPO: /* empty */

   28 DESTROI_ESCOPO: /* empty */

   29 PARAMs: PARAM ',' PARAMs
   30       | PARAM

   31 PARAM: _ID '=' EE
   32      | _ID

   33 LVARs: LVAR ',' LVARs
   34      | LVAR

   35 VVARs: VVAR ',' VVARs
   36      | VVAR

   37 LVAR: _ID '=' EE
   38     | _ID

   39 VVAR: _ID '=' EE
   40     | _ID

   41 CTEs: _ID '=' EE ',' CTEs
   42     | _ID '=' EE

   43 E_V: E ',' E_V
   44    | E

   45 EE: E
   46   | '{' '}'

   47 E: _ID '=' EE
   48  | _ID _INC_A EE
   49  | _ID _DEC_A EE
   50  | _ID _SETA EE
   51  | _ID _SETA '{' CMD CMDs '}'
   52  | EE _INC_UM
   53  | '(' _FPSETA EE
   54  | '(' PARAMs _FPSETA EE
   55  | F '.' _ID '=' EE
   56  | F '.' _ID _INC_A EE
   57  | F '[' EE ']' '=' EE
   58  | F '[' EE ']' '[' EE ']' '=' EE
   59  | F '.' _ID '[' EE ']' '=' EE
   60  | F '[' EE ']' _INC_A EE
   61  | F '.' _ID '[' EE ']' _INC_A EE
   62  | EE '<' EE
   63  | EE '*' EE
   64  | EE '+' EE
   65  | EE '-' EE
   66  | EE '/' EE
   67  | EE '>' EE
   68  | EE '%' EE
   69  | EE _IGUAL_A EE
   70  | F

   71 F: _ID
   72  | _NUM
   73  | _STRING
   74  | '(' EE ')'
   75  | F '(' ')'
   76  | F '[' EE ']'
   77  | F '[' EE ']' '[' EE ']'
   78  | F '(' ARGs ')'
   79  | '[' ']'
   80  | '[' ARGs ']'
   81  | '{' CAMPOs '}'
   82  | F '.' _ID
   83  | FUNC_ANON

   84 FUNC_ANON: _FUNCTION '(' ')' '{' CMDs '}'
   85          | _FUNCTION '(' PARAMs ')' '{' CMDs '}'

   86 CAMPOs: CAMPOs ',' CAMPOs
   87       | _ID ':' EE

   88 ARGs: EE ',' ARGs
   89     | EE


Terminals, with rules where they appear

$end (0) 0
'%' (37) 68
'(' (40) 15 16 17 18 19 25 26 53 54 74 75 78 84 85
')' (41) 15 16 17 18 19 25 26 74 75 78 84 85
'*' (42) 63
'+' (43) 64
',' (44) 29 33 35 41 43 86 88
'-' (45) 65
'.' (46) 55 56 59 61 82
'/' (47) 66
':' (58) 87
';' (59) 3 9 12 13 14 17 18
'<' (60) 62
'=' (61) 31 37 39 41 42 47 55 57 58 59
'>' (62) 67
'[' (91) 57 58 59 60 61 76 77 79 80
']' (93) 57 58 59 60 61 76 77 79 80
'{' (123) 10 11 25 26 46 51 81 84 85
'}' (125) 10 11 25 26 46 51 81 84 85
error (256)
_ID (258) 25 26 31 32 37 38 39 40 41 42 47 48 49 50 51 55 56 59 61
    71 82 87
_NUM (259) 72
_STRING (260) 73
_LET (261) 22
_VAR (262) 23
_CONST (263) 24
_FOR (264) 17 18
_FUNCTION (265) 25 26 84 85
_IF (266) 15 16
_ELSE (267) 15
_INC_UM (268) 52
_RETURN (269) 13 14
_SETA (270) 50 51
_FPSETA (271) 53 54
_INC_A (272) 48 56 60 61
_IGUAL_A (273) 69
_DEC_A (274) 49
_WHILE (275) 19


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
S (40)
    on left: 1, on right: 0
CMDs (41)
    on left: 2 3 4 5, on right: 1 2 3 4 10 25 26 51 84 85
CMD (42)
    on left: 6 7 8 9 10 11 12 13 14, on right: 2 10 15 16 17 18 19
    51
CMD_IF (43)
    on left: 15 16, on right: 7
CMD_FOR (44)
    on left: 17 18, on right: 6
CMD_WHILE (45)
    on left: 19, on right: 8
E_OPC (46)
    on left: 20 21, on right: 17 18
DECL_VAR (47)
    on left: 22 23 24, on right: 3 18
DECL_FUN (48)
    on left: 25 26, on right: 4
NOVO_ESCOPO (49)
    on left: 27, on right: 25 26
DESTROI_ESCOPO (50)
    on left: 28, on right: 25 26
PARAMs (51)
    on left: 29 30, on right: 26 29 54 85
PARAM (52)
    on left: 31 32, on right: 29 30
LVARs (53)
    on left: 33 34, on right: 22 33
VVARs (54)
    on left: 35 36, on right: 23 35
LVAR (55)
    on left: 37 38, on right: 33 34
VVAR (56)
    on left: 39 40, on right: 35 36
CTEs (57)
    on left: 41 42, on right: 24 41
E_V (58)
    on left: 43 44, on right: 9 20 43
EE (59)
    on left: 45 46, on right: 14 31 37 39 41 42 47 48 49 50 52 53 54
    55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 74 76 77 87 88 89
E (60)
    on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
    65 66 67 68 69 70, on right: 15 16 19 43 44 45
F (61)
    on left: 71 72 73 74 75 76 77 78 79 80 81 82 83,
    on right: 55 56 57 58 59 60 61 70 75 76 77 78 82
FUNC_ANON (62)
    on left: 84 85, on right: 83
CAMPOs (63)
    on left: 86 87, on right: 81 86
ARGs (64)
    on left: 88 89, on right: 78 80 88


state 0

    0 $accept: . S $end

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _LET       shift, and go to state 4
    _VAR       shift, and go to state 5
    _CONST     shift, and go to state 6
    _FOR       shift, and go to state 7
    _FUNCTION  shift, and go to state 8
    _IF        shift, and go to state 9
    _RETURN    shift, and go to state 10
    _WHILE     shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    ';'        shift, and go to state 14
    '{'        shift, and go to state 15

    $default  reduce using rule 5 (CMDs)

    S          go to state 16
    CMDs       go to state 17
    CMD        go to state 18
    CMD_IF     go to state 19
    CMD_FOR    go to state 20
    CMD_WHILE  go to state 21
    DECL_VAR   go to state 22
    DECL_FUN   go to state 23
    E_V        go to state 24
    EE         go to state 25
    E          go to state 26
    F          go to state 27
    FUNC_ANON  go to state 28


state 1

   47 E: _ID . '=' EE
   48  | _ID . _INC_A EE
   49  | _ID . _DEC_A EE
   50  | _ID . _SETA EE
   51  | _ID . _SETA '{' CMD CMDs '}'
   71 F: _ID .

    _SETA   shift, and go to state 29
    _INC_A  shift, and go to state 30
    _DEC_A  shift, and go to state 31
    '='     shift, and go to state 32

    $default  reduce using rule 71 (F)


state 2

   72 F: _NUM .

    $default  reduce using rule 72 (F)


state 3

   73 F: _STRING .

    $default  reduce using rule 73 (F)


state 4

   22 DECL_VAR: _LET . LVARs

    _ID  shift, and go to state 33

    LVARs  go to state 34
    LVAR   go to state 35


state 5

   23 DECL_VAR: _VAR . VVARs

    _ID  shift, and go to state 36

    VVARs  go to state 37
    VVAR   go to state 38


state 6

   24 DECL_VAR: _CONST . CTEs

    _ID  shift, and go to state 39

    CTEs  go to state 40


state 7

   17 CMD_FOR: _FOR . '(' E_OPC ';' E_OPC ';' E_OPC ')' CMD
   18        | _FOR . '(' DECL_VAR ';' E_OPC ';' E_OPC ')' CMD

    '('  shift, and go to state 41


state 8

   25 DECL_FUN: _FUNCTION . _ID '(' ')' '{' NOVO_ESCOPO CMDs '}' DESTROI_ESCOPO
   26         | _FUNCTION . _ID '(' NOVO_ESCOPO PARAMs ')' '{' CMDs '}' DESTROI_ESCOPO
   84 FUNC_ANON: _FUNCTION . '(' ')' '{' CMDs '}'
   85          | _FUNCTION . '(' PARAMs ')' '{' CMDs '}'

    _ID  shift, and go to state 42
    '('  shift, and go to state 43


state 9

   15 CMD_IF: _IF . '(' E ')' CMD _ELSE CMD
   16       | _IF . '(' E ')' CMD

    '('  shift, and go to state 44


state 10

   13 CMD: _RETURN . ';'
   14    | _RETURN . EE ';'

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    ';'        shift, and go to state 46
    '{'        shift, and go to state 47

    EE         go to state 48
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 11

   19 CMD_WHILE: _WHILE . '(' E ')' CMD

    '('  shift, and go to state 50


state 12

   79 F: '[' . ']'
   80  | '[' . ARGs ']'

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47
    ']'        shift, and go to state 51

    EE         go to state 52
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28
    ARGs       go to state 53


state 13

   53 E: '(' . _FPSETA EE
   54  | '(' . PARAMs _FPSETA EE
   74 F: '(' . EE ')'

    _ID        shift, and go to state 54
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    _FPSETA    shift, and go to state 55
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    PARAMs     go to state 56
    PARAM      go to state 57
    EE         go to state 58
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 14

   12 CMD: ';' .

    $default  reduce using rule 12 (CMD)


state 15

   10 CMD: '{' . CMD CMDs '}'
   11    | '{' . '}'
   46 EE: '{' . '}'
   81 F: '{' . CAMPOs '}'

    _ID        shift, and go to state 59
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FOR       shift, and go to state 7
    _FUNCTION  shift, and go to state 45
    _IF        shift, and go to state 9
    _RETURN    shift, and go to state 10
    _WHILE     shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    ';'        shift, and go to state 14
    '{'        shift, and go to state 15
    '}'        shift, and go to state 60

    CMD        go to state 61
    CMD_IF     go to state 19
    CMD_FOR    go to state 20
    CMD_WHILE  go to state 21
    E_V        go to state 24
    EE         go to state 25
    E          go to state 26
    F          go to state 27
    FUNC_ANON  go to state 28
    CAMPOs     go to state 62


state 16

    0 $accept: S . $end

    $end  shift, and go to state 63


state 17

    1 S: CMDs .

    $default  reduce using rule 1 (S)


state 18

    2 CMDs: CMD . CMDs

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _LET       shift, and go to state 4
    _VAR       shift, and go to state 5
    _CONST     shift, and go to state 6
    _FOR       shift, and go to state 7
    _FUNCTION  shift, and go to state 8
    _IF        shift, and go to state 9
    _RETURN    shift, and go to state 10
    _WHILE     shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    ';'        shift, and go to state 14
    '{'        shift, and go to state 15

    $default  reduce using rule 5 (CMDs)

    CMDs       go to state 64
    CMD        go to state 18
    CMD_IF     go to state 19
    CMD_FOR    go to state 20
    CMD_WHILE  go to state 21
    DECL_VAR   go to state 22
    DECL_FUN   go to state 23
    E_V        go to state 24
    EE         go to state 25
    E          go to state 26
    F          go to state 27
    FUNC_ANON  go to state 28


state 19

    7 CMD: CMD_IF .

    $default  reduce using rule 7 (CMD)


state 20

    6 CMD: CMD_FOR .

    $default  reduce using rule 6 (CMD)


state 21

    8 CMD: CMD_WHILE .

    $default  reduce using rule 8 (CMD)


state 22

    3 CMDs: DECL_VAR . ';' CMDs

    ';'  shift, and go to state 65


state 23

    4 CMDs: DECL_FUN . CMDs

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _LET       shift, and go to state 4
    _VAR       shift, and go to state 5
    _CONST     shift, and go to state 6
    _FOR       shift, and go to state 7
    _FUNCTION  shift, and go to state 8
    _IF        shift, and go to state 9
    _RETURN    shift, and go to state 10
    _WHILE     shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    ';'        shift, and go to state 14
    '{'        shift, and go to state 15

    $default  reduce using rule 5 (CMDs)

    CMDs       go to state 66
    CMD        go to state 18
    CMD_IF     go to state 19
    CMD_FOR    go to state 20
    CMD_WHILE  go to state 21
    DECL_VAR   go to state 22
    DECL_FUN   go to state 23
    E_V        go to state 24
    EE         go to state 25
    E          go to state 26
    F          go to state 27
    FUNC_ANON  go to state 28


state 24

    9 CMD: E_V . ';'

    ';'  shift, and go to state 67


state 25

   52 E: EE . _INC_UM
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76


state 26

   43 E_V: E . ',' E_V
   44    | E .
   45 EE: E .

    ','  shift, and go to state 77

    ';'       reduce using rule 44 (E_V)
    ')'       reduce using rule 44 (E_V)
    $default  reduce using rule 45 (EE)


state 27

   55 E: F . '.' _ID '=' EE
   56  | F . '.' _ID _INC_A EE
   57  | F . '[' EE ']' '=' EE
   58  | F . '[' EE ']' '[' EE ']' '=' EE
   59  | F . '.' _ID '[' EE ']' '=' EE
   60  | F . '[' EE ']' _INC_A EE
   61  | F . '.' _ID '[' EE ']' _INC_A EE
   70  | F .
   75 F: F . '(' ')'
   76  | F . '[' EE ']'
   77  | F . '[' EE ']' '[' EE ']'
   78  | F . '(' ARGs ')'
   82  | F . '.' _ID

    '['  shift, and go to state 78
    '('  shift, and go to state 79
    '.'  shift, and go to state 80

    $default  reduce using rule 70 (E)


state 28

   83 F: FUNC_ANON .

    $default  reduce using rule 83 (F)


state 29

   50 E: _ID _SETA . EE
   51  | _ID _SETA . '{' CMD CMDs '}'

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 81

    EE         go to state 82
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 30

   48 E: _ID _INC_A . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 83
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 31

   49 E: _ID _DEC_A . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 84
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 32

   47 E: _ID '=' . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 85
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 33

   37 LVAR: _ID . '=' EE
   38     | _ID .

    '='  shift, and go to state 86

    $default  reduce using rule 38 (LVAR)


state 34

   22 DECL_VAR: _LET LVARs .

    $default  reduce using rule 22 (DECL_VAR)


state 35

   33 LVARs: LVAR . ',' LVARs
   34      | LVAR .

    ','  shift, and go to state 87

    $default  reduce using rule 34 (LVARs)


state 36

   39 VVAR: _ID . '=' EE
   40     | _ID .

    '='  shift, and go to state 88

    $default  reduce using rule 40 (VVAR)


state 37

   23 DECL_VAR: _VAR VVARs .

    $default  reduce using rule 23 (DECL_VAR)


state 38

   35 VVARs: VVAR . ',' VVARs
   36      | VVAR .

    ','  shift, and go to state 89

    $default  reduce using rule 36 (VVARs)


state 39

   41 CTEs: _ID . '=' EE ',' CTEs
   42     | _ID . '=' EE

    '='  shift, and go to state 90


state 40

   24 DECL_VAR: _CONST CTEs .

    $default  reduce using rule 24 (DECL_VAR)


state 41

   17 CMD_FOR: _FOR '(' . E_OPC ';' E_OPC ';' E_OPC ')' CMD
   18        | _FOR '(' . DECL_VAR ';' E_OPC ';' E_OPC ')' CMD

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _LET       shift, and go to state 4
    _VAR       shift, and go to state 5
    _CONST     shift, and go to state 6
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    $default  reduce using rule 21 (E_OPC)

    E_OPC      go to state 91
    DECL_VAR   go to state 92
    E_V        go to state 93
    EE         go to state 25
    E          go to state 26
    F          go to state 27
    FUNC_ANON  go to state 28


state 42

   25 DECL_FUN: _FUNCTION _ID . '(' ')' '{' NOVO_ESCOPO CMDs '}' DESTROI_ESCOPO
   26         | _FUNCTION _ID . '(' NOVO_ESCOPO PARAMs ')' '{' CMDs '}' DESTROI_ESCOPO

    '('  shift, and go to state 94


state 43

   84 FUNC_ANON: _FUNCTION '(' . ')' '{' CMDs '}'
   85          | _FUNCTION '(' . PARAMs ')' '{' CMDs '}'

    _ID  shift, and go to state 95
    ')'  shift, and go to state 96

    PARAMs  go to state 97
    PARAM   go to state 57


state 44

   15 CMD_IF: _IF '(' . E ')' CMD _ELSE CMD
   16       | _IF '(' . E ')' CMD

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 25
    E          go to state 98
    F          go to state 27
    FUNC_ANON  go to state 28


state 45

   84 FUNC_ANON: _FUNCTION . '(' ')' '{' CMDs '}'
   85          | _FUNCTION . '(' PARAMs ')' '{' CMDs '}'

    '('  shift, and go to state 43


state 46

   13 CMD: _RETURN ';' .

    $default  reduce using rule 13 (CMD)


state 47

   46 EE: '{' . '}'
   81 F: '{' . CAMPOs '}'

    _ID  shift, and go to state 99
    '}'  shift, and go to state 100

    CAMPOs  go to state 62


state 48

   14 CMD: _RETURN EE . ';'
   52 E: EE . _INC_UM
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76
    ';'       shift, and go to state 101


state 49

   45 EE: E .

    $default  reduce using rule 45 (EE)


state 50

   19 CMD_WHILE: _WHILE '(' . E ')' CMD

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 25
    E          go to state 102
    F          go to state 27
    FUNC_ANON  go to state 28


state 51

   79 F: '[' ']' .

    $default  reduce using rule 79 (F)


state 52

   52 E: EE . _INC_UM
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE
   88 ARGs: EE . ',' ARGs
   89     | EE .

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    ','       shift, and go to state 103
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76

    $default  reduce using rule 89 (ARGs)


state 53

   80 F: '[' ARGs . ']'

    ']'  shift, and go to state 104


state 54

   31 PARAM: _ID . '=' EE
   32      | _ID .
   47 E: _ID . '=' EE
   48  | _ID . _INC_A EE
   49  | _ID . _DEC_A EE
   50  | _ID . _SETA EE
   51  | _ID . _SETA '{' CMD CMDs '}'
   71 F: _ID .

    _SETA   shift, and go to state 29
    _INC_A  shift, and go to state 30
    _DEC_A  shift, and go to state 31
    '='     shift, and go to state 105

    _FPSETA   reduce using rule 32 (PARAM)
    ','       reduce using rule 32 (PARAM)
    $default  reduce using rule 71 (F)


state 55

   53 E: '(' _FPSETA . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 106
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 56

   54 E: '(' PARAMs . _FPSETA EE

    _FPSETA  shift, and go to state 107


state 57

   29 PARAMs: PARAM . ',' PARAMs
   30       | PARAM .

    ','  shift, and go to state 108

    $default  reduce using rule 30 (PARAMs)


state 58

   52 E: EE . _INC_UM
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE
   74 F: '(' EE . ')'

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76
    ')'       shift, and go to state 109


state 59

   47 E: _ID . '=' EE
   48  | _ID . _INC_A EE
   49  | _ID . _DEC_A EE
   50  | _ID . _SETA EE
   51  | _ID . _SETA '{' CMD CMDs '}'
   71 F: _ID .
   87 CAMPOs: _ID . ':' EE

    _SETA   shift, and go to state 29
    _INC_A  shift, and go to state 30
    _DEC_A  shift, and go to state 31
    '='     shift, and go to state 32
    ':'     shift, and go to state 110

    $default  reduce using rule 71 (F)


state 60

   11 CMD: '{' '}' .
   46 EE: '{' '}' .

    _INC_UM   reduce using rule 46 (EE)
    _IGUAL_A  reduce using rule 46 (EE)
    '<'       reduce using rule 46 (EE)
    '>'       reduce using rule 46 (EE)
    '+'       reduce using rule 46 (EE)
    '-'       reduce using rule 46 (EE)
    '*'       reduce using rule 46 (EE)
    '/'       reduce using rule 46 (EE)
    '%'       reduce using rule 46 (EE)
    $default  reduce using rule 11 (CMD)


state 61

   10 CMD: '{' CMD . CMDs '}'

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _LET       shift, and go to state 4
    _VAR       shift, and go to state 5
    _CONST     shift, and go to state 6
    _FOR       shift, and go to state 7
    _FUNCTION  shift, and go to state 8
    _IF        shift, and go to state 9
    _RETURN    shift, and go to state 10
    _WHILE     shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    ';'        shift, and go to state 14
    '{'        shift, and go to state 15

    $default  reduce using rule 5 (CMDs)

    CMDs       go to state 111
    CMD        go to state 18
    CMD_IF     go to state 19
    CMD_FOR    go to state 20
    CMD_WHILE  go to state 21
    DECL_VAR   go to state 22
    DECL_FUN   go to state 23
    E_V        go to state 24
    EE         go to state 25
    E          go to state 26
    F          go to state 27
    FUNC_ANON  go to state 28


state 62

   81 F: '{' CAMPOs . '}'
   86 CAMPOs: CAMPOs . ',' CAMPOs

    ','  shift, and go to state 112
    '}'  shift, and go to state 113


state 63

    0 $accept: S $end .

    $default  accept


state 64

    2 CMDs: CMD CMDs .

    $default  reduce using rule 2 (CMDs)


state 65

    3 CMDs: DECL_VAR ';' . CMDs

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _LET       shift, and go to state 4
    _VAR       shift, and go to state 5
    _CONST     shift, and go to state 6
    _FOR       shift, and go to state 7
    _FUNCTION  shift, and go to state 8
    _IF        shift, and go to state 9
    _RETURN    shift, and go to state 10
    _WHILE     shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    ';'        shift, and go to state 14
    '{'        shift, and go to state 15

    $default  reduce using rule 5 (CMDs)

    CMDs       go to state 114
    CMD        go to state 18
    CMD_IF     go to state 19
    CMD_FOR    go to state 20
    CMD_WHILE  go to state 21
    DECL_VAR   go to state 22
    DECL_FUN   go to state 23
    E_V        go to state 24
    EE         go to state 25
    E          go to state 26
    F          go to state 27
    FUNC_ANON  go to state 28


state 66

    4 CMDs: DECL_FUN CMDs .

    $default  reduce using rule 4 (CMDs)


state 67

    9 CMD: E_V ';' .

    $default  reduce using rule 9 (CMD)


state 68

   52 E: EE _INC_UM .

    $default  reduce using rule 52 (E)


state 69

   69 E: EE _IGUAL_A . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 115
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 70

   62 E: EE '<' . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 116
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 71

   67 E: EE '>' . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 117
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 72

   64 E: EE '+' . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 118
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 73

   65 E: EE '-' . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 119
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 74

   63 E: EE '*' . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 120
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 75

   66 E: EE '/' . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 121
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 76

   68 E: EE '%' . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 122
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 77

   43 E_V: E ',' . E_V

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    E_V        go to state 123
    EE         go to state 25
    E          go to state 26
    F          go to state 27
    FUNC_ANON  go to state 28


state 78

   57 E: F '[' . EE ']' '=' EE
   58  | F '[' . EE ']' '[' EE ']' '=' EE
   60  | F '[' . EE ']' _INC_A EE
   76 F: F '[' . EE ']'
   77  | F '[' . EE ']' '[' EE ']'

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 124
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 79

   75 F: F '(' . ')'
   78  | F '(' . ARGs ')'

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47
    ')'        shift, and go to state 125

    EE         go to state 52
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28
    ARGs       go to state 126


state 80

   55 E: F '.' . _ID '=' EE
   56  | F '.' . _ID _INC_A EE
   59  | F '.' . _ID '[' EE ']' '=' EE
   61  | F '.' . _ID '[' EE ']' _INC_A EE
   82 F: F '.' . _ID

    _ID  shift, and go to state 127


state 81

   46 EE: '{' . '}'
   51 E: _ID _SETA '{' . CMD CMDs '}'
   81 F: '{' . CAMPOs '}'

    _ID        shift, and go to state 59
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FOR       shift, and go to state 7
    _FUNCTION  shift, and go to state 45
    _IF        shift, and go to state 9
    _RETURN    shift, and go to state 10
    _WHILE     shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    ';'        shift, and go to state 14
    '{'        shift, and go to state 15
    '}'        shift, and go to state 100

    CMD        go to state 128
    CMD_IF     go to state 19
    CMD_FOR    go to state 20
    CMD_WHILE  go to state 21
    E_V        go to state 24
    EE         go to state 25
    E          go to state 26
    F          go to state 27
    FUNC_ANON  go to state 28
    CAMPOs     go to state 62


state 82

   50 E: _ID _SETA EE .
   52  | EE . _INC_UM
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76

    $default  reduce using rule 50 (E)


state 83

   48 E: _ID _INC_A EE .
   52  | EE . _INC_UM
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76

    $default  reduce using rule 48 (E)


state 84

   49 E: _ID _DEC_A EE .
   52  | EE . _INC_UM
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76

    $default  reduce using rule 49 (E)


state 85

   47 E: _ID '=' EE .
   52  | EE . _INC_UM
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76

    $default  reduce using rule 47 (E)


state 86

   37 LVAR: _ID '=' . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 129
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 87

   33 LVARs: LVAR ',' . LVARs

    _ID  shift, and go to state 33

    LVARs  go to state 130
    LVAR   go to state 35


state 88

   39 VVAR: _ID '=' . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 131
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 89

   35 VVARs: VVAR ',' . VVARs

    _ID  shift, and go to state 36

    VVARs  go to state 132
    VVAR   go to state 38


state 90

   41 CTEs: _ID '=' . EE ',' CTEs
   42     | _ID '=' . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 133
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 91

   17 CMD_FOR: _FOR '(' E_OPC . ';' E_OPC ';' E_OPC ')' CMD

    ';'  shift, and go to state 134


state 92

   18 CMD_FOR: _FOR '(' DECL_VAR . ';' E_OPC ';' E_OPC ')' CMD

    ';'  shift, and go to state 135


state 93

   20 E_OPC: E_V .

    $default  reduce using rule 20 (E_OPC)


state 94

   25 DECL_FUN: _FUNCTION _ID '(' . ')' '{' NOVO_ESCOPO CMDs '}' DESTROI_ESCOPO
   26         | _FUNCTION _ID '(' . NOVO_ESCOPO PARAMs ')' '{' CMDs '}' DESTROI_ESCOPO

    ')'  shift, and go to state 136

    $default  reduce using rule 27 (NOVO_ESCOPO)

    NOVO_ESCOPO  go to state 137


state 95

   31 PARAM: _ID . '=' EE
   32      | _ID .

    '='  shift, and go to state 138

    $default  reduce using rule 32 (PARAM)


state 96

   84 FUNC_ANON: _FUNCTION '(' ')' . '{' CMDs '}'

    '{'  shift, and go to state 139


state 97

   85 FUNC_ANON: _FUNCTION '(' PARAMs . ')' '{' CMDs '}'

    ')'  shift, and go to state 140


state 98

   15 CMD_IF: _IF '(' E . ')' CMD _ELSE CMD
   16       | _IF '(' E . ')' CMD
   45 EE: E .

    ')'  shift, and go to state 141

    $default  reduce using rule 45 (EE)


state 99

   87 CAMPOs: _ID . ':' EE

    ':'  shift, and go to state 110


state 100

   46 EE: '{' '}' .

    $default  reduce using rule 46 (EE)


state 101

   14 CMD: _RETURN EE ';' .

    $default  reduce using rule 14 (CMD)


state 102

   19 CMD_WHILE: _WHILE '(' E . ')' CMD
   45 EE: E .

    ')'  shift, and go to state 142

    $default  reduce using rule 45 (EE)


state 103

   88 ARGs: EE ',' . ARGs

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 52
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28
    ARGs       go to state 143


state 104

   80 F: '[' ARGs ']' .

    $default  reduce using rule 80 (F)


state 105

   31 PARAM: _ID '=' . EE
   47 E: _ID '=' . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 144
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 106

   52 E: EE . _INC_UM
   53  | '(' _FPSETA EE .
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76

    $default  reduce using rule 53 (E)


state 107

   54 E: '(' PARAMs _FPSETA . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 145
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 108

   29 PARAMs: PARAM ',' . PARAMs

    _ID  shift, and go to state 95

    PARAMs  go to state 146
    PARAM   go to state 57


state 109

   74 F: '(' EE ')' .

    $default  reduce using rule 74 (F)


state 110

   87 CAMPOs: _ID ':' . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 147
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 111

   10 CMD: '{' CMD CMDs . '}'

    '}'  shift, and go to state 148


state 112

   86 CAMPOs: CAMPOs ',' . CAMPOs

    _ID  shift, and go to state 99

    CAMPOs  go to state 149


state 113

   81 F: '{' CAMPOs '}' .

    $default  reduce using rule 81 (F)


state 114

    3 CMDs: DECL_VAR ';' CMDs .

    $default  reduce using rule 3 (CMDs)


state 115

   52 E: EE . _INC_UM
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE
   69  | EE _IGUAL_A EE .

    _INC_UM  shift, and go to state 68
    '+'      shift, and go to state 72
    '-'      shift, and go to state 73
    '*'      shift, and go to state 74
    '/'      shift, and go to state 75
    '%'      shift, and go to state 76

    _IGUAL_A  error (nonassociative)
    '<'       error (nonassociative)
    '>'       error (nonassociative)

    $default  reduce using rule 69 (E)


state 116

   52 E: EE . _INC_UM
   62  | EE . '<' EE
   62  | EE '<' EE .
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM  shift, and go to state 68
    '+'      shift, and go to state 72
    '-'      shift, and go to state 73
    '*'      shift, and go to state 74
    '/'      shift, and go to state 75
    '%'      shift, and go to state 76

    _IGUAL_A  error (nonassociative)
    '<'       error (nonassociative)
    '>'       error (nonassociative)

    $default  reduce using rule 62 (E)


state 117

   52 E: EE . _INC_UM
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   67  | EE '>' EE .
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM  shift, and go to state 68
    '+'      shift, and go to state 72
    '-'      shift, and go to state 73
    '*'      shift, and go to state 74
    '/'      shift, and go to state 75
    '%'      shift, and go to state 76

    _IGUAL_A  error (nonassociative)
    '<'       error (nonassociative)
    '>'       error (nonassociative)

    $default  reduce using rule 67 (E)


state 118

   52 E: EE . _INC_UM
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   64  | EE '+' EE .
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM  shift, and go to state 68
    '*'      shift, and go to state 74
    '/'      shift, and go to state 75
    '%'      shift, and go to state 76

    $default  reduce using rule 64 (E)


state 119

   52 E: EE . _INC_UM
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   65  | EE '-' EE .
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM  shift, and go to state 68
    '*'      shift, and go to state 74
    '/'      shift, and go to state 75
    '%'      shift, and go to state 76

    $default  reduce using rule 65 (E)


state 120

   52 E: EE . _INC_UM
   62  | EE . '<' EE
   63  | EE . '*' EE
   63  | EE '*' EE .
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM  shift, and go to state 68

    $default  reduce using rule 63 (E)


state 121

   52 E: EE . _INC_UM
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   66  | EE '/' EE .
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM  shift, and go to state 68

    $default  reduce using rule 66 (E)


state 122

   52 E: EE . _INC_UM
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   68  | EE '%' EE .
   69  | EE . _IGUAL_A EE

    _INC_UM  shift, and go to state 68

    $default  reduce using rule 68 (E)


state 123

   43 E_V: E ',' E_V .

    $default  reduce using rule 43 (E_V)


state 124

   52 E: EE . _INC_UM
   57  | F '[' EE . ']' '=' EE
   58  | F '[' EE . ']' '[' EE ']' '=' EE
   60  | F '[' EE . ']' _INC_A EE
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE
   76 F: F '[' EE . ']'
   77  | F '[' EE . ']' '[' EE ']'

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76
    ']'       shift, and go to state 150


state 125

   75 F: F '(' ')' .

    $default  reduce using rule 75 (F)


state 126

   78 F: F '(' ARGs . ')'

    ')'  shift, and go to state 151


state 127

   55 E: F '.' _ID . '=' EE
   56  | F '.' _ID . _INC_A EE
   59  | F '.' _ID . '[' EE ']' '=' EE
   61  | F '.' _ID . '[' EE ']' _INC_A EE
   82 F: F '.' _ID .

    _INC_A  shift, and go to state 152
    '='     shift, and go to state 153
    '['     shift, and go to state 154

    '['       [reduce using rule 82 (F)]
    $default  reduce using rule 82 (F)


state 128

   51 E: _ID _SETA '{' CMD . CMDs '}'

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _LET       shift, and go to state 4
    _VAR       shift, and go to state 5
    _CONST     shift, and go to state 6
    _FOR       shift, and go to state 7
    _FUNCTION  shift, and go to state 8
    _IF        shift, and go to state 9
    _RETURN    shift, and go to state 10
    _WHILE     shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    ';'        shift, and go to state 14
    '{'        shift, and go to state 15

    $default  reduce using rule 5 (CMDs)

    CMDs       go to state 155
    CMD        go to state 18
    CMD_IF     go to state 19
    CMD_FOR    go to state 20
    CMD_WHILE  go to state 21
    DECL_VAR   go to state 22
    DECL_FUN   go to state 23
    E_V        go to state 24
    EE         go to state 25
    E          go to state 26
    F          go to state 27
    FUNC_ANON  go to state 28


state 129

   37 LVAR: _ID '=' EE .
   52 E: EE . _INC_UM
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76

    $default  reduce using rule 37 (LVAR)


state 130

   33 LVARs: LVAR ',' LVARs .

    $default  reduce using rule 33 (LVARs)


state 131

   39 VVAR: _ID '=' EE .
   52 E: EE . _INC_UM
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76

    $default  reduce using rule 39 (VVAR)


state 132

   35 VVARs: VVAR ',' VVARs .

    $default  reduce using rule 35 (VVARs)


state 133

   41 CTEs: _ID '=' EE . ',' CTEs
   42     | _ID '=' EE .
   52 E: EE . _INC_UM
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    ','       shift, and go to state 156
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76

    $default  reduce using rule 42 (CTEs)


state 134

   17 CMD_FOR: _FOR '(' E_OPC ';' . E_OPC ';' E_OPC ')' CMD

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    $default  reduce using rule 21 (E_OPC)

    E_OPC      go to state 157
    E_V        go to state 93
    EE         go to state 25
    E          go to state 26
    F          go to state 27
    FUNC_ANON  go to state 28


state 135

   18 CMD_FOR: _FOR '(' DECL_VAR ';' . E_OPC ';' E_OPC ')' CMD

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    $default  reduce using rule 21 (E_OPC)

    E_OPC      go to state 158
    E_V        go to state 93
    EE         go to state 25
    E          go to state 26
    F          go to state 27
    FUNC_ANON  go to state 28


state 136

   25 DECL_FUN: _FUNCTION _ID '(' ')' . '{' NOVO_ESCOPO CMDs '}' DESTROI_ESCOPO

    '{'  shift, and go to state 159


state 137

   26 DECL_FUN: _FUNCTION _ID '(' NOVO_ESCOPO . PARAMs ')' '{' CMDs '}' DESTROI_ESCOPO

    _ID  shift, and go to state 95

    PARAMs  go to state 160
    PARAM   go to state 57


state 138

   31 PARAM: _ID '=' . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 161
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 139

   84 FUNC_ANON: _FUNCTION '(' ')' '{' . CMDs '}'

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _LET       shift, and go to state 4
    _VAR       shift, and go to state 5
    _CONST     shift, and go to state 6
    _FOR       shift, and go to state 7
    _FUNCTION  shift, and go to state 8
    _IF        shift, and go to state 9
    _RETURN    shift, and go to state 10
    _WHILE     shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    ';'        shift, and go to state 14
    '{'        shift, and go to state 15

    $default  reduce using rule 5 (CMDs)

    CMDs       go to state 162
    CMD        go to state 18
    CMD_IF     go to state 19
    CMD_FOR    go to state 20
    CMD_WHILE  go to state 21
    DECL_VAR   go to state 22
    DECL_FUN   go to state 23
    E_V        go to state 24
    EE         go to state 25
    E          go to state 26
    F          go to state 27
    FUNC_ANON  go to state 28


state 140

   85 FUNC_ANON: _FUNCTION '(' PARAMs ')' . '{' CMDs '}'

    '{'  shift, and go to state 163


state 141

   15 CMD_IF: _IF '(' E ')' . CMD _ELSE CMD
   16       | _IF '(' E ')' . CMD

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FOR       shift, and go to state 7
    _FUNCTION  shift, and go to state 45
    _IF        shift, and go to state 9
    _RETURN    shift, and go to state 10
    _WHILE     shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    ';'        shift, and go to state 14
    '{'        shift, and go to state 15

    CMD        go to state 164
    CMD_IF     go to state 19
    CMD_FOR    go to state 20
    CMD_WHILE  go to state 21
    E_V        go to state 24
    EE         go to state 25
    E          go to state 26
    F          go to state 27
    FUNC_ANON  go to state 28


state 142

   19 CMD_WHILE: _WHILE '(' E ')' . CMD

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FOR       shift, and go to state 7
    _FUNCTION  shift, and go to state 45
    _IF        shift, and go to state 9
    _RETURN    shift, and go to state 10
    _WHILE     shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    ';'        shift, and go to state 14
    '{'        shift, and go to state 15

    CMD        go to state 165
    CMD_IF     go to state 19
    CMD_FOR    go to state 20
    CMD_WHILE  go to state 21
    E_V        go to state 24
    EE         go to state 25
    E          go to state 26
    F          go to state 27
    FUNC_ANON  go to state 28


state 143

   88 ARGs: EE ',' ARGs .

    $default  reduce using rule 88 (ARGs)


state 144

   31 PARAM: _ID '=' EE .
   47 E: _ID '=' EE .
   52  | EE . _INC_UM
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76

    ')'       reduce using rule 47 (E)
    $default  reduce using rule 31 (PARAM)


state 145

   52 E: EE . _INC_UM
   54  | '(' PARAMs _FPSETA EE .
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76

    $default  reduce using rule 54 (E)


state 146

   29 PARAMs: PARAM ',' PARAMs .

    $default  reduce using rule 29 (PARAMs)


state 147

   52 E: EE . _INC_UM
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE
   87 CAMPOs: _ID ':' EE .

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76

    $default  reduce using rule 87 (CAMPOs)


state 148

   10 CMD: '{' CMD CMDs '}' .

    $default  reduce using rule 10 (CMD)


state 149

   86 CAMPOs: CAMPOs . ',' CAMPOs
   86       | CAMPOs ',' CAMPOs .

    $default  reduce using rule 86 (CAMPOs)


state 150

   57 E: F '[' EE ']' . '=' EE
   58  | F '[' EE ']' . '[' EE ']' '=' EE
   60  | F '[' EE ']' . _INC_A EE
   76 F: F '[' EE ']' .
   77  | F '[' EE ']' . '[' EE ']'

    _INC_A  shift, and go to state 166
    '='     shift, and go to state 167
    '['     shift, and go to state 168

    '['       [reduce using rule 76 (F)]
    $default  reduce using rule 76 (F)


state 151

   78 F: F '(' ARGs ')' .

    $default  reduce using rule 78 (F)


state 152

   56 E: F '.' _ID _INC_A . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 169
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 153

   55 E: F '.' _ID '=' . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 170
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 154

   59 E: F '.' _ID '[' . EE ']' '=' EE
   61  | F '.' _ID '[' . EE ']' _INC_A EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 171
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 155

   51 E: _ID _SETA '{' CMD CMDs . '}'

    '}'  shift, and go to state 172


state 156

   41 CTEs: _ID '=' EE ',' . CTEs

    _ID  shift, and go to state 39

    CTEs  go to state 173


state 157

   17 CMD_FOR: _FOR '(' E_OPC ';' E_OPC . ';' E_OPC ')' CMD

    ';'  shift, and go to state 174


state 158

   18 CMD_FOR: _FOR '(' DECL_VAR ';' E_OPC . ';' E_OPC ')' CMD

    ';'  shift, and go to state 175


state 159

   25 DECL_FUN: _FUNCTION _ID '(' ')' '{' . NOVO_ESCOPO CMDs '}' DESTROI_ESCOPO

    $default  reduce using rule 27 (NOVO_ESCOPO)

    NOVO_ESCOPO  go to state 176


state 160

   26 DECL_FUN: _FUNCTION _ID '(' NOVO_ESCOPO PARAMs . ')' '{' CMDs '}' DESTROI_ESCOPO

    ')'  shift, and go to state 177


state 161

   31 PARAM: _ID '=' EE .
   52 E: EE . _INC_UM
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76

    $default  reduce using rule 31 (PARAM)


state 162

   84 FUNC_ANON: _FUNCTION '(' ')' '{' CMDs . '}'

    '}'  shift, and go to state 178


state 163

   85 FUNC_ANON: _FUNCTION '(' PARAMs ')' '{' . CMDs '}'

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _LET       shift, and go to state 4
    _VAR       shift, and go to state 5
    _CONST     shift, and go to state 6
    _FOR       shift, and go to state 7
    _FUNCTION  shift, and go to state 8
    _IF        shift, and go to state 9
    _RETURN    shift, and go to state 10
    _WHILE     shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    ';'        shift, and go to state 14
    '{'        shift, and go to state 15

    $default  reduce using rule 5 (CMDs)

    CMDs       go to state 179
    CMD        go to state 18
    CMD_IF     go to state 19
    CMD_FOR    go to state 20
    CMD_WHILE  go to state 21
    DECL_VAR   go to state 22
    DECL_FUN   go to state 23
    E_V        go to state 24
    EE         go to state 25
    E          go to state 26
    F          go to state 27
    FUNC_ANON  go to state 28


state 164

   15 CMD_IF: _IF '(' E ')' CMD . _ELSE CMD
   16       | _IF '(' E ')' CMD .

    _ELSE  shift, and go to state 180

    _ELSE     [reduce using rule 16 (CMD_IF)]
    $default  reduce using rule 16 (CMD_IF)


state 165

   19 CMD_WHILE: _WHILE '(' E ')' CMD .

    $default  reduce using rule 19 (CMD_WHILE)


state 166

   60 E: F '[' EE ']' _INC_A . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 181
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 167

   57 E: F '[' EE ']' '=' . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 182
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 168

   58 E: F '[' EE ']' '[' . EE ']' '=' EE
   77 F: F '[' EE ']' '[' . EE ']'

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 183
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 169

   52 E: EE . _INC_UM
   56  | F '.' _ID _INC_A EE .
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76

    $default  reduce using rule 56 (E)


state 170

   52 E: EE . _INC_UM
   55  | F '.' _ID '=' EE .
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76

    $default  reduce using rule 55 (E)


state 171

   52 E: EE . _INC_UM
   59  | F '.' _ID '[' EE . ']' '=' EE
   61  | F '.' _ID '[' EE . ']' _INC_A EE
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76
    ']'       shift, and go to state 184


state 172

   51 E: _ID _SETA '{' CMD CMDs '}' .

    $default  reduce using rule 51 (E)


state 173

   41 CTEs: _ID '=' EE ',' CTEs .

    $default  reduce using rule 41 (CTEs)


state 174

   17 CMD_FOR: _FOR '(' E_OPC ';' E_OPC ';' . E_OPC ')' CMD

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    $default  reduce using rule 21 (E_OPC)

    E_OPC      go to state 185
    E_V        go to state 93
    EE         go to state 25
    E          go to state 26
    F          go to state 27
    FUNC_ANON  go to state 28


state 175

   18 CMD_FOR: _FOR '(' DECL_VAR ';' E_OPC ';' . E_OPC ')' CMD

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    $default  reduce using rule 21 (E_OPC)

    E_OPC      go to state 186
    E_V        go to state 93
    EE         go to state 25
    E          go to state 26
    F          go to state 27
    FUNC_ANON  go to state 28


state 176

   25 DECL_FUN: _FUNCTION _ID '(' ')' '{' NOVO_ESCOPO . CMDs '}' DESTROI_ESCOPO

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _LET       shift, and go to state 4
    _VAR       shift, and go to state 5
    _CONST     shift, and go to state 6
    _FOR       shift, and go to state 7
    _FUNCTION  shift, and go to state 8
    _IF        shift, and go to state 9
    _RETURN    shift, and go to state 10
    _WHILE     shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    ';'        shift, and go to state 14
    '{'        shift, and go to state 15

    $default  reduce using rule 5 (CMDs)

    CMDs       go to state 187
    CMD        go to state 18
    CMD_IF     go to state 19
    CMD_FOR    go to state 20
    CMD_WHILE  go to state 21
    DECL_VAR   go to state 22
    DECL_FUN   go to state 23
    E_V        go to state 24
    EE         go to state 25
    E          go to state 26
    F          go to state 27
    FUNC_ANON  go to state 28


state 177

   26 DECL_FUN: _FUNCTION _ID '(' NOVO_ESCOPO PARAMs ')' . '{' CMDs '}' DESTROI_ESCOPO

    '{'  shift, and go to state 188


state 178

   84 FUNC_ANON: _FUNCTION '(' ')' '{' CMDs '}' .

    $default  reduce using rule 84 (FUNC_ANON)


state 179

   85 FUNC_ANON: _FUNCTION '(' PARAMs ')' '{' CMDs . '}'

    '}'  shift, and go to state 189


state 180

   15 CMD_IF: _IF '(' E ')' CMD _ELSE . CMD

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FOR       shift, and go to state 7
    _FUNCTION  shift, and go to state 45
    _IF        shift, and go to state 9
    _RETURN    shift, and go to state 10
    _WHILE     shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    ';'        shift, and go to state 14
    '{'        shift, and go to state 15

    CMD        go to state 190
    CMD_IF     go to state 19
    CMD_FOR    go to state 20
    CMD_WHILE  go to state 21
    E_V        go to state 24
    EE         go to state 25
    E          go to state 26
    F          go to state 27
    FUNC_ANON  go to state 28


state 181

   52 E: EE . _INC_UM
   60  | F '[' EE ']' _INC_A EE .
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76

    $default  reduce using rule 60 (E)


state 182

   52 E: EE . _INC_UM
   57  | F '[' EE ']' '=' EE .
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76

    $default  reduce using rule 57 (E)


state 183

   52 E: EE . _INC_UM
   58  | F '[' EE ']' '[' EE . ']' '=' EE
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE
   77 F: F '[' EE ']' '[' EE . ']'

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76
    ']'       shift, and go to state 191


state 184

   59 E: F '.' _ID '[' EE ']' . '=' EE
   61  | F '.' _ID '[' EE ']' . _INC_A EE

    _INC_A  shift, and go to state 192
    '='     shift, and go to state 193


state 185

   17 CMD_FOR: _FOR '(' E_OPC ';' E_OPC ';' E_OPC . ')' CMD

    ')'  shift, and go to state 194


state 186

   18 CMD_FOR: _FOR '(' DECL_VAR ';' E_OPC ';' E_OPC . ')' CMD

    ')'  shift, and go to state 195


state 187

   25 DECL_FUN: _FUNCTION _ID '(' ')' '{' NOVO_ESCOPO CMDs . '}' DESTROI_ESCOPO

    '}'  shift, and go to state 196


state 188

   26 DECL_FUN: _FUNCTION _ID '(' NOVO_ESCOPO PARAMs ')' '{' . CMDs '}' DESTROI_ESCOPO

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _LET       shift, and go to state 4
    _VAR       shift, and go to state 5
    _CONST     shift, and go to state 6
    _FOR       shift, and go to state 7
    _FUNCTION  shift, and go to state 8
    _IF        shift, and go to state 9
    _RETURN    shift, and go to state 10
    _WHILE     shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    ';'        shift, and go to state 14
    '{'        shift, and go to state 15

    $default  reduce using rule 5 (CMDs)

    CMDs       go to state 197
    CMD        go to state 18
    CMD_IF     go to state 19
    CMD_FOR    go to state 20
    CMD_WHILE  go to state 21
    DECL_VAR   go to state 22
    DECL_FUN   go to state 23
    E_V        go to state 24
    EE         go to state 25
    E          go to state 26
    F          go to state 27
    FUNC_ANON  go to state 28


state 189

   85 FUNC_ANON: _FUNCTION '(' PARAMs ')' '{' CMDs '}' .

    $default  reduce using rule 85 (FUNC_ANON)


state 190

   15 CMD_IF: _IF '(' E ')' CMD _ELSE CMD .

    $default  reduce using rule 15 (CMD_IF)


state 191

   58 E: F '[' EE ']' '[' EE ']' . '=' EE
   77 F: F '[' EE ']' '[' EE ']' .

    '='  shift, and go to state 198

    $default  reduce using rule 77 (F)


state 192

   61 E: F '.' _ID '[' EE ']' _INC_A . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 199
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 193

   59 E: F '.' _ID '[' EE ']' '=' . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 200
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 194

   17 CMD_FOR: _FOR '(' E_OPC ';' E_OPC ';' E_OPC ')' . CMD

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FOR       shift, and go to state 7
    _FUNCTION  shift, and go to state 45
    _IF        shift, and go to state 9
    _RETURN    shift, and go to state 10
    _WHILE     shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    ';'        shift, and go to state 14
    '{'        shift, and go to state 15

    CMD        go to state 201
    CMD_IF     go to state 19
    CMD_FOR    go to state 20
    CMD_WHILE  go to state 21
    E_V        go to state 24
    EE         go to state 25
    E          go to state 26
    F          go to state 27
    FUNC_ANON  go to state 28


state 195

   18 CMD_FOR: _FOR '(' DECL_VAR ';' E_OPC ';' E_OPC ')' . CMD

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FOR       shift, and go to state 7
    _FUNCTION  shift, and go to state 45
    _IF        shift, and go to state 9
    _RETURN    shift, and go to state 10
    _WHILE     shift, and go to state 11
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    ';'        shift, and go to state 14
    '{'        shift, and go to state 15

    CMD        go to state 202
    CMD_IF     go to state 19
    CMD_FOR    go to state 20
    CMD_WHILE  go to state 21
    E_V        go to state 24
    EE         go to state 25
    E          go to state 26
    F          go to state 27
    FUNC_ANON  go to state 28


state 196

   25 DECL_FUN: _FUNCTION _ID '(' ')' '{' NOVO_ESCOPO CMDs '}' . DESTROI_ESCOPO

    $default  reduce using rule 28 (DESTROI_ESCOPO)

    DESTROI_ESCOPO  go to state 203


state 197

   26 DECL_FUN: _FUNCTION _ID '(' NOVO_ESCOPO PARAMs ')' '{' CMDs . '}' DESTROI_ESCOPO

    '}'  shift, and go to state 204


state 198

   58 E: F '[' EE ']' '[' EE ']' '=' . EE

    _ID        shift, and go to state 1
    _NUM       shift, and go to state 2
    _STRING    shift, and go to state 3
    _FUNCTION  shift, and go to state 45
    '['        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 47

    EE         go to state 205
    E          go to state 49
    F          go to state 27
    FUNC_ANON  go to state 28


state 199

   52 E: EE . _INC_UM
   61  | F '.' _ID '[' EE ']' _INC_A EE .
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76

    $default  reduce using rule 61 (E)


state 200

   52 E: EE . _INC_UM
   59  | F '.' _ID '[' EE ']' '=' EE .
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76

    $default  reduce using rule 59 (E)


state 201

   17 CMD_FOR: _FOR '(' E_OPC ';' E_OPC ';' E_OPC ')' CMD .

    $default  reduce using rule 17 (CMD_FOR)


state 202

   18 CMD_FOR: _FOR '(' DECL_VAR ';' E_OPC ';' E_OPC ')' CMD .

    $default  reduce using rule 18 (CMD_FOR)


state 203

   25 DECL_FUN: _FUNCTION _ID '(' ')' '{' NOVO_ESCOPO CMDs '}' DESTROI_ESCOPO .

    $default  reduce using rule 25 (DECL_FUN)


state 204

   26 DECL_FUN: _FUNCTION _ID '(' NOVO_ESCOPO PARAMs ')' '{' CMDs '}' . DESTROI_ESCOPO

    $default  reduce using rule 28 (DESTROI_ESCOPO)

    DESTROI_ESCOPO  go to state 206


state 205

   52 E: EE . _INC_UM
   58  | F '[' EE ']' '[' EE ']' '=' EE .
   62  | EE . '<' EE
   63  | EE . '*' EE
   64  | EE . '+' EE
   65  | EE . '-' EE
   66  | EE . '/' EE
   67  | EE . '>' EE
   68  | EE . '%' EE
   69  | EE . _IGUAL_A EE

    _INC_UM   shift, and go to state 68
    _IGUAL_A  shift, and go to state 69
    '<'       shift, and go to state 70
    '>'       shift, and go to state 71
    '+'       shift, and go to state 72
    '-'       shift, and go to state 73
    '*'       shift, and go to state 74
    '/'       shift, and go to state 75
    '%'       shift, and go to state 76

    $default  reduce using rule 58 (E)


state 206

   26 DECL_FUN: _FUNCTION _ID '(' NOVO_ESCOPO PARAMs ')' '{' CMDs '}' DESTROI_ESCOPO .

    $default  reduce using rule 26 (DECL_FUN)
